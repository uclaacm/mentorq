worker_processes 5;

events {
	worker_connections 4096;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	gzip on;

	# certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
	ssl_certificate /var/lib/dehydrated/certs/mentorq.hack.uclaacm.com/fullchain.pem;
	ssl_certificate_key /var/lib/dehydrated/certs/mentorq.hack.uclaacm.com/privkey.pem;
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;

	# modern configuration. tweak to your needs.
	ssl_protocols TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
	ssl_prefer_server_ciphers on;

	server {
		listen 80 default_server;
		listen [::]:80 default_server;

		# Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl http2 default_server;
		listen [::]:443 ssl http2 default_server;

		server_name mentorq.hack.uclaacm.com;

		root /usr/share/nginx/html;
		index index.html;
		try_files $uri /index.html =404;
	}

	upstream docker-api {
		server api:8080;
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;

		server_name api.mentorq.hack.uclaacm.com;

		location / {
			proxy_pass http://docker-api;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
	}
}
